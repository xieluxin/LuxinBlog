<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luxin.mapper.CommentDao">

    <resultMap id="Comment" type="com.luxin.entity.Comment">
        <id column="id" property="id"/>
        <result column="author"  property="author"/>
        <result column="email"  property="email"/>
        <result column="create_date"  property="createDate"/>
        <result column="content"  property="content"/>
        <result column="status"  property="status"/>
        <result column="article_id"  property="articleId"/>
    </resultMap>

    <sql id="commentSql">
        id,author,email,create_date,content,status,article_id
    </sql>

    <insert id="create" keyProperty="id" useGeneratedKeys="true" parameterType="com.luxin.entity.Comment">
		insert into tb_comment(
			id,
			author,
			email,
			create_date,
			content,
			status,
			article_id,
		)values(
			#{id},
			#{author},
			#{email},
			now(),
			#{content},
			#{status},
			#{articleId},
		)
	</insert>

    <select id="query" resultMap="Comment">
        select <include refid="commentSql"/> from tb_comment
        <include refid="CommentFindCriteria"/>
        order by id desc
    </select>

    <select id="count" resultType="int">
        select count(1) from tb_comment
        <include refid="CommentFindCriteria"/>
    </select>

    <select id="detail" resultMap="Comment">
        select <include refid="commentSql"/> from tb_comment
        <include refid="CommentFindCriteria"/>
        limit 1
    </select>

    <delete id="delete">
        delete from tb_comment
        <include refid="CommentFindCriteria" />
    </delete>
    <update id="update">
        update tb_comment
        <include refid="CommentUpdateCriteria"/>
        <include refid="CommentFindCriteria"/>
    </update>

    <sql id="CommentFindCriteria">
        <where>
            <if test="id != null">and ID = #{id}</if>
            <if test="author != null and author != ''">and author = #{author}</if>
            <if test="email != null and email != ''">and email = #{email}</if>
            <if test="content != null and content != ''">and content like concat('%',#{content},'%')</if>
            <if test="status != null">and status = #{status}</if>
            <if test="articleId != null">and article_id = #{articleId}</if>
        </where>
    </sql>
    <sql id="CommentUpdateCriteria">
        <set>
            <if test="updateId != null">ID = #{updateId},</if>
            <if test="updateAuthor != null and updateAuthor != ''">author = #{updateAuthor},</if>
            <if test="updateEmail != null and updateEmail != ''">email = #{updateEmail},</if>
            <if test="updateCreateDate != null">create_date = #{updateCreateDate},</if>
            <if test="updateContent != null and updateContent != ''">content = #{updateContent},</if>
            <if test="updateStatus != null">status = #{updateStatus},</if>
            <if test="updateArticleId != null">article_id = #{updateArticleId},</if>
        </set>
    </sql>
</mapper>
